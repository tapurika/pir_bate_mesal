{"version":3,"file":"component---src-pages-1501-2000-proverb-1641-1660-tsx-ef2ca194b7639e7c00d8.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/pages/1501-2000-proverb/1641-1660.tsx","webpack://my-gatsby-site/./src/utils/index.tsx","webpack://my-gatsby-site/./src/components/Text/TextBox.tsx","webpack://my-gatsby-site/./src/components/Text/Context.tsx","webpack://my-gatsby-site/./src/components/Card/ProverbCard.tsx","webpack://my-gatsby-site/./src/common/ProverbPageUI.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport Layout from \"../../Layout\";\r\nimport ProverbPageUI from \"../../common/ProverbPageUI\";\r\nimport dataJSON from \"../../sources/1601-1700/41-60.json\";\r\n\r\nexport default function Proverb_1641_1660() {\r\n  return (\r\n    <Layout>\r\n      <ProverbPageUI proverbData={dataJSON as IProverbCard[]} />\r\n    </Layout>\r\n  );\r\n}\r\n","export function isExisted(data: strOrStrArr | undefined) {\r\n  const isEmpty = data?.length === 0 || data?.[0].length === 0;\r\n\r\n  return !(isEmpty || data === undefined || data === null);\r\n}\r\n\r\nexport function getNUMfromPathname() {\r\n  // sample: http://localhost:5173/pir_bate_mesal/1501-2000-proverb/1721-1740\r\n  // return Number(window.location.pathname.split(\"/\")[3].split(\"-\")[0]);\r\n  return Number(window.location.pathname.split(\"/\")[2].split(\"-\")[0]);\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport default function TextBox({\r\n  text,\r\n  className = \"\",\r\n}: {\r\n  text: strOrStrArr;\r\n  className?: string;\r\n}) {\r\n  return (\r\n    <div\r\n      className={\r\n        \"flex flex-col gap-2.5 font-iranYekan-400 text-[18px] text-gray-700 \" +\r\n        className\r\n      }\r\n    >\r\n      {Array.isArray(text) ? (\r\n        text.map((data) => {\r\n          return (\r\n            <span key={\"31\" + text} className={\"block min-h-2\"}>\r\n              {data}\r\n            </span>\r\n          );\r\n        })\r\n      ) : (\r\n        <span className={\"block\"}>{text}</span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport TextBox from \"./TextBox\";\r\n\r\nexport default function Context({\r\n  title,\r\n  data,\r\n  cls,\r\n}: {\r\n  cls?: {\r\n    title?: string;\r\n    data?: string;\r\n  };\r\n  title: string | React.ReactNode;\r\n  data: strOrStrArr;\r\n}) {\r\n  return (\r\n    <div>\r\n      <h6 className={cls?.title}>{title}</h6>\r\n      <TextBox className={cls?.data} text={data} />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport { isExisted } from \"../../utils\";\r\nimport Context from \"../../components/Text/Context\";\r\nimport TextBox from \"../../components/Text/TextBox\";\r\n// import CopyTextHook from \"@/hooks\";\r\n\r\nexport default function ProverbCard({\r\n  // link,\r\n  proverb,\r\n  mean,\r\n  irony,\r\n  description,\r\n  p_equal,\r\n  words,\r\n  reference,\r\n  subjects,\r\n  count,\r\n}: IProverbCard & { count: number; link?: string }) {\r\n  // const { isCopy, copyText } = CopyTextHook();\r\n  return (\r\n    <section\r\n      id={\"\" + count}\r\n      className={`\r\n      flex flex-col gap-6\r\n      border-r-4 border-r-green-500\r\n      pr-8 pl-6 py-8\r\n      [&>div>h6]:text-[19px]\r\n      [&>div>div]:mt-[5px]\r\n      shadow-lg inset-shadow-xs rounded-2xl\r\n    `}\r\n    >\r\n      <Context\r\n        title={\r\n          <div>\r\n            Ÿæ€åÿ± ÿ®ÿ™Ÿá ŸÖÿ´ÿßŸÑ <strong className=\"text-[19px]\"> ({count}) </strong>{\" \"}\r\n            {/* <span\r\n              onClick={() => {\r\n                copyText(link + \"#\" + count);\r\n              }}\r\n            >\r\n              {isCopy ? \"⁄©Ÿæ€å ÿ¥ÿØ üëç\" : \"⁄©Ÿæ€å ŸÑ€åŸÜ⁄© üîó\"}\r\n            </span> */}\r\n            :\r\n          </div>\r\n        }\r\n        data={proverb}\r\n        cls={{\r\n          title: \" font-iranYekan-700 text-green-600 !text-[23px] \",\r\n          data: \" !mt-2.5 text-[21px] text-shadow-sm \",\r\n        }}\r\n      />\r\n      {isExisted(mean) ? <Context title=\"ŸÖÿπŸÜ€å\" data={mean} /> : null}\r\n      {isExisted(irony) ? <Context title=\"⁄©ŸÜÿß€åŸá ÿßÿ≤\" data={irony} /> : null}\r\n      {isExisted(description) ? (\r\n        <Context title=\"ÿ™Ÿàÿ∂€åÿ¨ÿßÿ™ ÿ®€åÿ¥ÿ™ÿ±\" data={description} />\r\n      ) : null}\r\n      {isExisted(p_equal) ? (\r\n        <Context title=\"ÿ®ÿ±ÿßÿ®ÿ± Ÿæÿßÿ±ÿ≥€å\" data={p_equal} />\r\n      ) : null}\r\n      {typeof words[0] == \"object\" && (\r\n        <div>\r\n          <h6>Ÿàÿß⁄ò⁄ØÿßŸÜ :</h6>\r\n          {(words as IWord[]).map((data) => {\r\n            return (\r\n              <div key={data.w} className=\"text-gray-500\">\r\n                <div>\r\n                  <strong>\r\n                    {data.w} {`-->`}{\" \"}\r\n                  </strong>\r\n                  <TextBox text={data.m} />\r\n                  {isExisted(data.d) && <TextBox text={data.d!} />}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      {isExisted(reference.writer) || isExisted(reference.book) ? (\r\n        <div>\r\n          {isExisted(reference.writer) && (\r\n            <div>\r\n              <strong className=\"pe-1.5\">ŸÜŸà€åÿ≥ŸÜÿØŸá : </strong>\r\n              <span> {reference.writer}</span>\r\n            </div>\r\n          )}\r\n          {isExisted(reference.book) && (\r\n            <div>\r\n              <strong className=\"pe-1.5\">⁄©ÿ™ÿßÿ® : </strong>\r\n              <span> {reference.book}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n      {isExisted(subjects) && (\r\n        <div className=\"\">\r\n          <h6>ŸÖŸàÿ∂Ÿàÿπ :</h6>\r\n          <div className=\"flex items-center gap-5\">\r\n            {subjects.map((text) => (\r\n              <span\r\n                key={\"12\" + text}\r\n                className=\"block font-iranYekan-400 text-[19px] text-gray-700\"\r\n              >\r\n                {text}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport ProverbCard from \"../components/Card/ProverbCard\";\r\nimport { getNUMfromPathname } from \"../utils\";\r\n\r\nconst styles = {\r\n  root: `\r\n    wrapper\r\n    flex flex-col gap-12 lg:gap-20\r\n    mt-8 pt-20 font-iranYekan-600\r\n    border-t-2 border-t-green-500 \r\n  `,\r\n};\r\n\r\nexport default function ProverbPageUI({\r\n  proverbData,\r\n}: {\r\n  proverbData: IProverbCard[];\r\n}) {\r\n  // const link = window.location.pathname;\r\n\r\n  return (\r\n    <div className=\"wrapper-pad\">\r\n      <div className={styles.root}>\r\n        {proverbData.map((data, i) => (\r\n          <ProverbCard\r\n            key={Array.isArray(data.proverb) ? data.proverb[0] : data.proverb}\r\n            // link={link}\r\n            count={getNUMfromPathname() + i}\r\n            {...data}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Proverb_1641_1660","React","Layout","ProverbPageUI","proverbData","dataJSON","isExisted","data","length","TextBox","text","className","Array","isArray","map","key","Context","title","cls","ProverbCard","proverb","mean","irony","description","p_equal","words","reference","subjects","count","id","w","m","d","writer","book","styles","root","i","Number","window","location","pathname","split"],"sourceRoot":""}